{"version":3,"sources":["webpack:///./src/components/FetchForm.js","webpack:///./src/pages/index.js"],"names":["FetchForm","useState","contents","setContents","query","setQuery","isLoading","setIsLoading","useEffect","url","window","location","href","paragraphs","words","fetch","then","data","ok","json","Error","resp","console","log","catch","err","status","word","message","onSubmit","e","preventDefault","target","value","htmlFor","type","id","body","map","w","i","key","IndexPage","title"],"mappings":"+JA2EeA,EAzEG,WAAO,IAAD,EACUC,qBAAzBC,EADe,KACLC,EADK,OAEIF,qBAAnBG,EAFe,KAERC,EAFQ,OAGYJ,oBAAS,GAApCK,EAHe,KAGJC,EAHI,KAKtBC,qBAAU,WACR,GAAIJ,EAAO,CACTG,GAAa,GACb,IAAME,EAECC,OAAOC,SAASC,KAFX,cAE6BR,EAAMS,WAFnC,UAEuDT,EAAMU,MACzEC,MAAMN,GACHO,MAAK,SAACC,GACL,GAAIA,EAAKC,GACP,OAAOD,EAAKE,OAEd,MAAM,IAAIC,MAAM,mCAEjBJ,MAAK,SAACK,GACLC,QAAQC,IAAIF,GACZlB,EAAYkB,GACZd,GAAa,MAEdiB,OAAM,SAACC,GACNlB,GAAa,GACbJ,EAAY,CACVuB,OAAQ,IACRC,KAAK,yBAA0BF,EAAIG,gBAI1C,CAACxB,IASJ,OACE,iCACE,0BAAMyB,SATU,SAACC,GACnBA,EAAEC,iBACF1B,EAAS,CACPQ,WAAYiB,EAAEE,OAAO,GAAGC,MACxBnB,MAAOgB,EAAEE,OAAO,GAAGC,UAMjB,2BAAOC,QAAQ,cAAf,aAEE,2BAAOC,KAAK,OAAOC,GAAG,gBAExB,2BAAOF,QAAQ,SAAf,SAEE,2BAAOC,KAAK,OAAOC,GAAG,WAExB,4BAAQD,KAAK,UAAb,eAEA7B,EAEE,yCAGAJ,EAEI,iCACE,2BAAKA,EAASwB,QACZxB,EAASmC,KAAKC,KAAI,SAACC,EAAGC,GAAJ,OAAW,uBAAGC,IAAKD,GAAKD,OAI9C,mDCnDCG,UAVG,kBAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,SACX,+CACA,+CACA,6CACA,kBAAC,EAAD","file":"component---src-pages-index-js-237e2ee937ae95fa6a02.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst FetchForm = () => {\n  const [contents, setContents] = useState();\n  const [query, setQuery] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      setIsLoading(true);\n      const url = process.env.NODE_ENV === 'development'\n        ? `https://guarded-chamber-22750.herokuapp.com/api/paragraphs/${query.paragraphs}/words/${query.words}`\n        : `${window.location.href}paragraphs/${query.paragraphs}/words/${query.words}`;\n      fetch(url)\n        .then((data) => {\n          if (data.ok) {\n            return data.json();\n          }\n          throw new Error('Network issues, please retry');\n        })\n        .then((resp) => {\n          console.log(resp);\n          setContents(resp);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          setIsLoading(false);\n          setContents({\n            status: 444,\n            word: `An error has occured: ${err.message}`,\n          });\n        });\n    }\n  }, [query]);\n\n  const formHandler = (e) => {\n    e.preventDefault();\n    setQuery({\n      paragraphs: e.target[0].value,\n      words: e.target[1].value,\n    });\n  };\n  return (\n    <section>\n      <form onSubmit={formHandler}>\n        <label htmlFor=\"paragraphs\">\n          Paragrafy:\n          <input type=\"text\" id=\"paragraphs\" />\n        </label>\n        <label htmlFor=\"words\">\n          Słowa:\n          <input type=\"text\" id=\"words\" />\n        </label>\n        <button type=\"submit\"> Poproszę </button>\n      </form>\n      { isLoading\n        ? (\n          <p> Wczytuję </p>\n        )\n        : (\n          contents\n            ? (\n              <section>\n                <p>{ contents.status }</p>\n                { contents.body.map((w, i) => (<p key={i}>{ w }</p>)) }\n              </section>\n            )\n            : (\n              <p> Tu będzie gadało </p>\n            )\n        )}\n    </section>\n  );\n};\n\nexport default FetchForm;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport FetchForm from '../components/FetchForm';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" />\n    <h1>Tu będzie tytuł</h1>\n    <p>A tu jakiś tekst</p>\n    <p>Prawdopodobnie</p>\n    <FetchForm />\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}