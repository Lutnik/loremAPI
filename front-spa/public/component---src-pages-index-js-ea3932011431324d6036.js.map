{"version":3,"sources":["webpack:///./src/css/formStyle.js","webpack:///./src/components/Form.js","webpack:///./src/css/pStyle.js","webpack:///./src/components/Results.js","webpack:///./src/components/FetchForm.js","webpack:///./src/pages/index.js"],"names":["form","width","display","flexDirection","flexWrap","justifyContent","alignItems","label","fontSize","fontFamily","fontWeight","color","textAlign","select","lineHeight","padding","maxWidth","boxSizing","margin","border","boxShadow","borderRadius","MozAppearance","WebkitAppearance","appearance","backgroundColor","backgroundImage","Form","formHandler","useRef","par","onSubmit","style","formStyle","defaultValue","onChange","e","val","target","value","current","textContent","required","selected","ref","id","type","root","transition","Results","isLoading","contents","hover","event","className","Array","isArray","body","map","w","i","pStyle","key","onMouseEnter","onMouseLeave","height","defaultProps","FetchForm","useState","setContents","query","setQuery","setIsLoading","useEffect","url","paragraphs","words","fetch","then","data","ok","json","Error","resp","catch","err","status","word","message","preventDefault","Index","title","keywords","marginBottom","href"],"mappings":"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","file":"component---src-pages-index-js-ea3932011431324d6036.js","sourcesContent":["export default {\n  form: {\n    width: 'max-content',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    alignItems: 'baseline',\n  },\n  label: {\n    fontSize: '16px',\n    fontFamily: 'sans-serif',\n    fontWeight: '600',\n    color: '#222',\n    width: '6em',\n    textAlign: 'center',\n  },\n  select: {\n    display: 'inline-block',\n    fontSize: '16px',\n    fontFamily: 'sans-serif',\n    fontWeight: '700',\n    color: '#222',\n    lineHeight: '1.3',\n    padding: '.3em .6em .2em .6em',\n    width: 'auto',\n    maxWidth: '100%',\n    boxSizing: 'border-box',\n    margin: '0.2em',\n    border: '1px solid #aaa',\n    boxShadow: '1px 3px 8px rgba(0,0,0,0.5)',\n    borderRadius: '0.3em',\n    MozAppearance: 'none',\n    WebkitAppearance: 'none',\n    appearance: 'none',\n    backgroundColor: '#fff',\n    backgroundImage: 'linear-gradient(to bottom, #ffffff 0%,#e1e1e1 100%)',\n  },\n};\n","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport formStyle from '../css/formStyle';\n\nconst Form = ({ formHandler }) => {\n  const label = useRef();\n  const par = useRef();\n\n  const polishIsHard = (val) => {\n    if (val === '1') {\n      label.current.textContent = 'paragraf';\n      par.current[0].textContent = 'krótki';\n      par.current[1].textContent = 'średni';\n      par.current[2].textContent = 'długi';\n    } else if (val === '5') {\n      label.current.textContent = 'paragrafów';\n      par.current[0].textContent = 'krótkich';\n      par.current[1].textContent = 'średnich';\n      par.current[2].textContent = 'długich';\n    } else {\n      label.current.textContent = 'paragrafy ';\n      par.current[0].textContent = 'krótkie ';\n      par.current[1].textContent = 'średnie ';\n      par.current[2].textContent = 'długie  ';\n    }\n  };\n\n  return (\n    <form onSubmit={formHandler} style={formStyle.form}>\n      <select\n        defaultValue={3}\n        style={formStyle.select}\n        onChange={(e) => polishIsHard(e.target.value)}\n        required\n      >\n        <option> 1 </option>\n        <option> 2 </option>\n        <option selected> 3 </option>\n        <option> 4 </option>\n        <option> 5 </option>\n      </select>\n      <select\n        defaultValue=\"50\"\n        ref={par}\n        style={{ ...formStyle.select, width: '6em' }}\n        required\n      >\n        <option value=\"20\" id=\"kr\"> krótkie </option>\n        <option value=\"50\" id=\"sr\"> średnie </option>\n        <option value=\"80\" id=\"dl\"> długie </option>\n      </select>\n      <label style={formStyle.label} ref={label}> paragrafy </label>\n      <button style={formStyle.select} type=\"submit\"> poproszę </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  formHandler: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","export default {\n  root: {\n    textAlign: 'justify',\n    fontFamily: '\"Comic Neue\", cursive',\n    backgroundColor: 'rgba(255, 255, 255, 0.6)',\n    borderRadius: '0.3em',\n    padding: '0.5em 1em',\n    transition: 'ease-out 150ms',\n    ':hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.9)',\n    },\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport pStyle from '../css/pStyle';\nimport '../css/spinner.css';\n\nconst Results = ({ isLoading, contents }) => {\n  const hover = (event) => {\n    if (event.type === 'mouseenter') {\n      event.target.style.backgroundColor = 'rgba(255, 255, 255, 0.9)';\n    } else {\n      event.target.style.backgroundColor = 'rgba(255, 255, 255, 0.6)';\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div style={{ width: '100%', textAlign: 'center' }}>\n        <div className=\"lds-dual-ring\" />\n      </div>\n    );\n  }\n  if (contents && !Array.isArray(contents.body)) {\n    return <p> A following error has occured: {contents.body} </p>;\n  }\n  if (contents) {\n    return (\n      <section>\n        { contents.body.map((w, i) => (\n          <p\n            style={pStyle.root}\n            key={i}\n            onMouseEnter={(e) => hover(e)}\n            onMouseLeave={(e) => hover(e)}\n          >\n            { w }\n          </p>\n        )) }\n        <p style={{ height: '50px' }} />\n      </section>\n    );\n  }\n  return null;\n};\n\nResults.propTypes = {\n  isLoading: PropTypes.bool,\n  contents: PropTypes.shape({\n    status: PropTypes.number,\n    body: PropTypes.arrayOf(PropTypes.string),\n  }),\n};\n\nResults.defaultProps = {\n  isLoading: false,\n  contents: null,\n};\n\nexport default Results;\n","import React, { useEffect, useState } from 'react';\nimport Form from './Form';\nimport Results from './Results';\n\nconst FetchForm = () => {\n  const [contents, setContents] = useState();\n  const [query, setQuery] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      setIsLoading(true);\n      const url = `https://lorem-silesium.herokuapp.com/api/paragraphs/${query.paragraphs}/words/${query.words}`;\n      fetch(url)\n        .then((data) => {\n          if (data.ok) return data.json();\n          throw new Error('Network issues, please retry');\n        })\n        .then((resp) => {\n          setIsLoading(false);\n          setContents(resp);\n        })\n        .catch((err) => {\n          setIsLoading(false);\n          setContents({\n            status: 444,\n            word: `An error has occured: ${err.message}`,\n          });\n        });\n    }\n  }, [query]);\n\n  const formHandler = (e) => {\n    e.preventDefault();\n    setQuery({\n      paragraphs: e.target[0].value,\n      words: e.target[1].value,\n    });\n  };\n\n  return (\n    <section>\n      <Form formHandler={formHandler} />\n      <Results isLoading={isLoading} contents={contents} />\n    </section>\n  );\n};\n\nexport default FetchForm;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport FetchForm from '../components/FetchForm';\n\nconst Index = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={['lorem', 'ślunska', 'śląska', 'godko', 'gadka', 'api', 'generator']} />\n    <h2>Lorem ipsum we ślůnskij godce</h2>\n    <h4 style={{ marginBottom: '0.5em' }}>\n      Czy zawsze marzyłeś o tym, aby Twój kontent był po śląsku?\n      Od dzisiaj to możliwe!\n    </h4>\n    <p style={{ marginBottom: '0.5em' }}>\n      &quot;Po co mi kolejny generator lorem?&quot;, zapytasz?\n      <br />\n      A ja odpowiem obejrzyj&nbsp;\n      <a href=\"https://www.youtube.com/watch?v=hrwLBeOcfms\" target=\"new\">TO</a>\n      &nbsp;albo&nbsp;\n      <a href=\"https://www.youtube.com/watch?v=osZ4KpUKPNo\" target=\"new\">TO</a>\n      &nbsp;i nie zadawaj więcej takich pytań...\n    </p>\n    <p> Wybierz, ile chcesz paragrafów oraz słów w każdym z nich: </p>\n    <FetchForm />\n  </Layout>\n);\n\nexport default Index;\n"],"sourceRoot":""}