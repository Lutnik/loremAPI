{"version":3,"sources":["webpack:///./src/css/pStyle.js","webpack:///./src/css/formStyle.js","webpack:///./src/components/FetchForm.js","webpack:///./src/pages/index.js"],"names":["root","textAlign","fontFamily","backgroundColor","borderRadius","padding","transition","form","width","display","flexDirection","flexWrap","justifyContent","alignItems","label","fontSize","fontWeight","color","select","lineHeight","maxWidth","boxSizing","margin","border","boxShadow","MozAppearance","WebkitAppearance","appearance","backgroundImage","Radium","useState","contents","setContents","query","setQuery","isLoading","setIsLoading","useEffect","url","paragraphs","words","fetch","then","data","ok","json","Error","resp","catch","err","status","word","message","useRef","par","onSubmit","e","preventDefault","target","value","style","formStyle","defaultValue","onChange","val","current","textContent","required","ref","id","type","className","body","map","w","i","pStyle","key","height","IndexPage","title","keywords","marginBottom","href"],"mappings":"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","file":"component---src-pages-index-js-e4e64f5a02c14edbf3bd.js","sourcesContent":["export default {\n  root: {\n    textAlign: 'justify',\n    fontFamily: '\"Comic Neue\", cursive',\n    backgroundColor: 'rgba(255, 255, 255, 0.6)',\n    borderRadius: '0.3em',\n    padding: '0.5em 1em',\n    transition: 'ease-out 150ms',\n    ':hover': {\n      backgroundColor: 'rgba(255, 255, 255, 0.9)',\n    },\n  },\n};\n","export default {\n  form: {\n    width: 'max-content',\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'space-evenly',\n    alignItems: 'baseline',\n  },\n  label: {\n    fontSize: '16px',\n    fontFamily: 'sans-serif',\n    fontWeight: '600',\n    color: '#222',\n    width: '6em',\n    textAlign: 'center',\n  },\n  select: {\n    display: 'inline-block',\n    fontSize: '16px',\n    fontFamily: 'sans-serif',\n    fontWeight: '700',\n    color: '#222',\n    lineHeight: '1.3',\n    padding: '.3em .6em .2em .6em',\n    width: 'auto',\n    maxWidth: '100%',\n    boxSizing: 'border-box',\n    margin: '0.2em',\n    border: '1px solid #aaa',\n    boxShadow: '1px 3px 8px rgba(0,0,0,0.5)',\n    borderRadius: '0.3em',\n    MozAppearance: 'none',\n    WebkitAppearance: 'none',\n    appearance: 'none',\n    backgroundColor: '#fff',\n    backgroundImage: 'linear-gradient(to bottom, #ffffff 0%,#e1e1e1 100%)',\n  },\n};\n","import React, { useEffect, useState, useRef } from 'react';\nimport Radium from 'radium';\nimport pStyle from '../css/pStyle';\nimport formStyle from '../css/formStyle';\nimport '../css/spinner.css';\n\nconst FetchForm = () => {\n  const [contents, setContents] = useState();\n  const [query, setQuery] = useState();\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (query) {\n      setIsLoading(true);\n      const url = `https://guarded-chamber-22750.herokuapp.com/api/paragraphs/${query.paragraphs}/words/${query.words}`;\n      fetch(url)\n        .then((data) => {\n          if (data.ok) {\n            return data.json();\n          }\n          throw new Error('Network issues, please retry');\n        })\n        .then((resp) => {\n          setContents(resp);\n          setIsLoading(false);\n        })\n        .catch((err) => {\n          setIsLoading(false);\n          setContents({\n            status: 444,\n            word: `An error has occured: ${err.message}`,\n          });\n        });\n    }\n  }, [query]);\n\n  const label = useRef();\n  const par = useRef();\n\n  const formHandler = (e) => {\n    e.preventDefault();\n    setQuery({\n      paragraphs: e.target[0].value,\n      words: e.target[1].value,\n    });\n  };\n\n  const polishIsHard = (val) => {\n    if (val === '1') {\n      label.current.textContent = 'paragraf';\n      par.current[0].textContent = 'krótki';\n      par.current[1].textContent = 'średni';\n      par.current[2].textContent = 'długi';\n    } else if (val === '5') {\n      label.current.textContent = 'paragrafów';\n      par.current[0].textContent = 'krótkich';\n      par.current[1].textContent = 'średnich';\n      par.current[2].textContent = 'długich';\n    } else {\n      label.current.textContent = 'paragrafy ';\n      par.current[0].textContent = 'krótkie ';\n      par.current[1].textContent = 'średnie ';\n      par.current[2].textContent = 'długie  ';\n    }\n  };\n\n  return (\n    <section>\n      <form onSubmit={formHandler} style={formStyle.form}>\n        <select\n          defaultValue={3}\n          style={formStyle.select}\n          onChange={(e) => polishIsHard(e.target.value)}\n          required\n        >\n          <option> 1 </option>\n          <option> 2 </option>\n          <option> 3 </option>\n          <option> 4 </option>\n          <option> 5 </option>\n        </select>\n        <select\n          defaultValue=\"50\"\n          ref={par}\n          style={{ ...formStyle.select, width: '6em' }}\n          required\n        >\n          <option value=\"20\" id=\"kr\"> krótkie </option>\n          <option value=\"50\" id=\"sr\"> średnie </option>\n          <option value=\"80\" id=\"dl\"> długie </option>\n        </select>\n        <label style={formStyle.label} ref={label}> paragrafy </label>\n        <button style={formStyle.select} type=\"submit\"> poproszę </button>\n      </form>\n      { isLoading\n        ? (\n          <div style={{ width: '100%', textAlign: 'center' }}>\n            <div className=\"lds-dual-ring\" />\n          </div>\n        )\n        : (\n          contents\n             && (\n             <section>\n               { contents.body.map((w, i) => (<p style={pStyle.root} key={i}>{ w }</p>)) }\n               <p style={{ height: '50px' }} />\n             </section>\n             )\n        )}\n    </section>\n  );\n};\n\nexport default Radium(FetchForm);\n","import React from 'react';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport FetchForm from '../components/FetchForm';\n\nconst IndexPage = () => (\n  <Layout>\n    <SEO title=\"Home\" keywords={['lorem', 'ślunska', 'śląska', 'godko', 'gadka', 'api', 'generator']} />\n    <h2>Lorem ipsum we ślůnskij godce</h2>\n    <h4 style={{ marginBottom: '0.5em' }}>\n      Czy zawsze marzyłeś o tym, aby Twój kontent był po śląsku?\n      Od dzisiaj to możliwe!\n    </h4>\n    <p style={{ marginBottom: '0.5em' }}>\n      &quot;Po co mi kolejny generator lorem?&quot;, zapytasz?\n      <br />\n      A ja odpowiem:&nbsp;\n      <a href=\"https://www.youtube.com/watch?v=hrwLBeOcfms\" target=\"new\">Obejrzyj</a>\n      &nbsp;albo&nbsp;\n      <a href=\"https://www.youtube.com/watch?v=osZ4KpUKPNo\" target=\"new\">Obejrzyj</a>\n      &nbsp;i nie zadawaj więcej takich pytań...\n    </p>\n    <p> Wybierz, ile chcesz paragrafów oraz słów w każdym z nich: </p>\n    <FetchForm />\n  </Layout>\n);\n\nexport default IndexPage;\n"],"sourceRoot":""}